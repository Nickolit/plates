---

- hosts: all                 # /etc/ansible/hosts
  tasks:
  become: true
  - name: "Check file .ssh/authorized_keys on client-server and replace from original auth_keys file if they have any unacceptable changes"
    copy:
      src: /home/ubuntu/.ssh/authorized_keys
      dest: /home/ubuntu/.ssh/authorized_keys
    notify:
    - Restart sshd           # Restart sshd if replace

- hosts: servers             # /etc/ansible/hosts 
  become: true
  remote_user: ubuntu
  tasks:
  - name: "Добавить обмен ключами, шифрами и MAC"
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "{{item.reg}}"
      line: "{{item.line}}"
    with_items:
    - { reg: '^KexAlgorithms', line: 'KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256' }
    - { reg: '^Ciphers', line: 'Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr' }

  - name: "Включить наиболее безопасные алгоритмы аутентификации сервера и 2-ю версию протокола"
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "{{item.reg}}"
      line: "{{item.line}}"
    with_items:
    - { reg: '^Protocol 2', line: 'Protocol 2' }
    - { reg: '^HostKey /etc/ssh/ssh_host_ed25519_key', line: 'HostKey /etc/ssh/ssh_host_ed25519_key' }
    - { reg: '^HostKey /etc/ssh/ssh_host_rsa_key', line: 'HostKey /etc/ssh/ssh_host_rsa_key' }

  - name: "Отключить небезопасные алгоритмы"
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: {{items.reg}}
      state: absent
    with_items:
    - { reg: '^HostKey /etc/ssh/ssh_host_ecdsa_key' }
    - { reg: '^HostKey /etc/ssh/ssh_host_dsa_key' }

  - name: "И удалить файлы"
    file:
      dest: {{items.dst}}
      state: absent
    with_items:
    - { dst: '/etc/ssh/ssh_host_ecdsa_key.pub' }
    - { dst: '/etc/ssh/ssh_host_ecdsa_key' }
    - { dst: '/etc/ssh/ssh_host_dsa_key.pub' }
    - { dst: '/etc/ssh/ssh_host_dsa_key' }

  - name: "Отключить логин по паролю и разрешить логиниться только с помощью publickey."
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "{{item.reg}}"
      line: "{{item.line}}"
    with_items:
    - { reg: '^#?AuthenticationMethods', line: 'AuthenticationMethods publickey' }
    - { reg: '^#?^#?PasswordAuthentication', line: 'PasswordAuthentication no' }
    - { reg: '^#?ChallengeResponseAuthentication', line: 'ChallengeResponseAuthentication no' }
    - { reg: '^#?PubkeyAuthentication', line: 'PubkeyAuthentication yes' }
    - { reg: '^LogLevel', line: 'LogLevel VERBOSE' }
    - { reg: '^PermitRootLogin', line: 'PermitRootLogin No' }
    - { reg: '^AllowUsers', line: AllowUsers ubuntu' }

  handlers:  
    - name: Restart sshd
      service:
        name: sshd
        state: restarted

  - debug:
      msg: "Готово! При необходимости сгенерируйте клиентские ключи с помощью следующей команды: ssh-keygen -t ed25519 -o -a 100 && ssh-keygen -t rsa -b 4096 -o -a 100"
